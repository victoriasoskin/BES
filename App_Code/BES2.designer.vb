'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BES1")>  _
Partial Public Class BES2DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCustEventList(instance As CustEventList)
    End Sub
  Partial Private Sub UpdateCustEventList(instance As CustEventList)
    End Sub
  Partial Private Sub DeleteCustEventList(instance As CustEventList)
    End Sub
  Partial Private Sub Insertp5t_FormResult(instance As p5t_FormResult)
    End Sub
  Partial Private Sub Updatep5t_FormResult(instance As p5t_FormResult)
    End Sub
  Partial Private Sub Deletep5t_FormResult(instance As p5t_FormResult)
    End Sub
  Partial Private Sub Insertp6t_ActStatus(instance As p6t_ActStatus)
    End Sub
  Partial Private Sub Updatep6t_ActStatus(instance As p6t_ActStatus)
    End Sub
  Partial Private Sub Deletep6t_ActStatus(instance As p6t_ActStatus)
    End Sub
  Partial Private Sub Insertp6t_job(instance As p6t_job)
    End Sub
  Partial Private Sub Updatep6t_job(instance As p6t_job)
    End Sub
  Partial Private Sub Deletep6t_job(instance As p6t_job)
    End Sub
  Partial Private Sub InsertFrameList(instance As FrameList)
    End Sub
  Partial Private Sub UpdateFrameList(instance As FrameList)
    End Sub
  Partial Private Sub DeleteFrameList(instance As FrameList)
    End Sub
  Partial Private Sub Insertp6t_Emp(instance As p6t_Emp)
    End Sub
  Partial Private Sub Updatep6t_Emp(instance As p6t_Emp)
    End Sub
  Partial Private Sub Deletep6t_Emp(instance As p6t_Emp)
    End Sub
  Partial Private Sub Insertp1t_Category(instance As p1t_Category)
    End Sub
  Partial Private Sub Updatep1t_Category(instance As p1t_Category)
    End Sub
  Partial Private Sub Deletep1t_Category(instance As p1t_Category)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("bebook10").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property p5t_Forms() As System.Data.Linq.Table(Of p5t_Form)
		Get
			Return Me.GetTable(Of p5t_Form)
		End Get
	End Property
	
	Public ReadOnly Property p5t_Texts() As System.Data.Linq.Table(Of p5t_Text)
		Get
			Return Me.GetTable(Of p5t_Text)
		End Get
	End Property
	
	Public ReadOnly Property p5v_Answers() As System.Data.Linq.Table(Of p5v_Answer)
		Get
			Return Me.GetTable(Of p5v_Answer)
		End Get
	End Property
	
	Public ReadOnly Property CustEventLists() As System.Data.Linq.Table(Of CustEventList)
		Get
			Return Me.GetTable(Of CustEventList)
		End Get
	End Property
	
	Public ReadOnly Property p4v_Tarifs() As System.Data.Linq.Table(Of p4v_Tarif)
		Get
			Return Me.GetTable(Of p4v_Tarif)
		End Get
	End Property
	
	Public ReadOnly Property p5t_FormResults() As System.Data.Linq.Table(Of p5t_FormResult)
		Get
			Return Me.GetTable(Of p5t_FormResult)
		End Get
	End Property
	
	Public ReadOnly Property p6t_ActStatus() As System.Data.Linq.Table(Of p6t_ActStatus)
		Get
			Return Me.GetTable(Of p6t_ActStatus)
		End Get
	End Property
	
	Public ReadOnly Property p6t_jobs() As System.Data.Linq.Table(Of p6t_job)
		Get
			Return Me.GetTable(Of p6t_job)
		End Get
	End Property
	
	Public ReadOnly Property FrameLists() As System.Data.Linq.Table(Of FrameList)
		Get
			Return Me.GetTable(Of FrameList)
		End Get
	End Property
	
	Public ReadOnly Property p6t_Emps() As System.Data.Linq.Table(Of p6t_Emp)
		Get
			Return Me.GetTable(Of p6t_Emp)
		End Get
	End Property
	
	Public ReadOnly Property p1t_Categories() As System.Data.Linq.Table(Of p1t_Category)
		Get
			Return Me.GetTable(Of p1t_Category)
		End Get
	End Property
	
	Public ReadOnly Property vEFrameLists() As System.Data.Linq.Table(Of vEFrameList)
		Get
			Return Me.GetTable(Of vEFrameList)
		End Get
	End Property
	
	Public ReadOnly Property vSurvey_Answers() As System.Data.Linq.Table(Of vSurvey_Answer)
		Get
			Return Me.GetTable(Of vSurvey_Answer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p5t_Forms")>  _
Partial Public Class p5t_Form
	
	Private _FormID As Integer
	
	Private _FormTypeID As System.Nullable(Of Integer)
	
	Private _loadtime As System.Nullable(Of Date)
	
	Private _userid As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property FormID() As Integer
		Get
			Return Me._FormID
		End Get
		Set
			If ((Me._FormID = value)  _
						= false) Then
				Me._FormID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormTypeID", DbType:="Int")>  _
	Public Property FormTypeID() As System.Nullable(Of Integer)
		Get
			Return Me._FormTypeID
		End Get
		Set
			If (Me._FormTypeID.Equals(value) = false) Then
				Me._FormTypeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loadtime", DbType:="DateTime")>  _
	Public Property loadtime() As System.Nullable(Of Date)
		Get
			Return Me._loadtime
		End Get
		Set
			If (Me._loadtime.Equals(value) = false) Then
				Me._loadtime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="Int")>  _
	Public Property userid() As System.Nullable(Of Integer)
		Get
			Return Me._userid
		End Get
		Set
			If (Me._userid.Equals(value) = false) Then
				Me._userid = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p5t_Texts")>  _
Partial Public Class p5t_Text
	
	Private _TextID As Integer
	
	Private _FormID As System.Nullable(Of Integer)
	
	Private _QuestionID As System.Nullable(Of Integer)
	
	Private _TextDET As String
	
	Private _loadtime As System.Nullable(Of Date)
	
	Private _userid As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property TextID() As Integer
		Get
			Return Me._TextID
		End Get
		Set
			If ((Me._TextID = value)  _
						= false) Then
				Me._TextID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", DbType:="Int")>  _
	Public Property FormID() As System.Nullable(Of Integer)
		Get
			Return Me._FormID
		End Get
		Set
			If (Me._FormID.Equals(value) = false) Then
				Me._FormID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestionID", DbType:="Int")>  _
	Public Property QuestionID() As System.Nullable(Of Integer)
		Get
			Return Me._QuestionID
		End Get
		Set
			If (Me._QuestionID.Equals(value) = false) Then
				Me._QuestionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextDET", DbType:="VarChar(MAX)")>  _
	Public Property TextDET() As String
		Get
			Return Me._TextDET
		End Get
		Set
			If (String.Equals(Me._TextDET, value) = false) Then
				Me._TextDET = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loadtime", DbType:="DateTime")>  _
	Public Property loadtime() As System.Nullable(Of Date)
		Get
			Return Me._loadtime
		End Get
		Set
			If (Me._loadtime.Equals(value) = false) Then
				Me._loadtime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="Int")>  _
	Public Property userid() As System.Nullable(Of Integer)
		Get
			Return Me._userid
		End Get
		Set
			If (Me._userid.Equals(value) = false) Then
				Me._userid = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p5v_Answers")>  _
Partial Public Class p5v_Answer
	
	Private _AnswerID As Integer
	
	Private _FormID As System.Nullable(Of Integer)
	
	Private _QuestionID As System.Nullable(Of Integer)
	
	Private _Val As System.Nullable(Of Integer)
	
	Private _TextDET As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnswerID", DbType:="Int NOT NULL")>  _
	Public Property AnswerID() As Integer
		Get
			Return Me._AnswerID
		End Get
		Set
			If ((Me._AnswerID = value)  _
						= false) Then
				Me._AnswerID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", DbType:="Int")>  _
	Public Property FormID() As System.Nullable(Of Integer)
		Get
			Return Me._FormID
		End Get
		Set
			If (Me._FormID.Equals(value) = false) Then
				Me._FormID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestionID", DbType:="Int")>  _
	Public Property QuestionID() As System.Nullable(Of Integer)
		Get
			Return Me._QuestionID
		End Get
		Set
			If (Me._QuestionID.Equals(value) = false) Then
				Me._QuestionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Val", DbType:="Int")>  _
	Public Property Val() As System.Nullable(Of Integer)
		Get
			Return Me._Val
		End Get
		Set
			If (Me._Val.Equals(value) = false) Then
				Me._Val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextDET", DbType:="VarChar(MAX)")>  _
	Public Property TextDET() As String
		Get
			Return Me._TextDET
		End Get
		Set
			If (String.Equals(Me._TextDET, value) = false) Then
				Me._TextDET = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CustEventList")>  _
Partial Public Class CustEventList
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustEventID As Long
	
	Private _CustomerID As System.Nullable(Of Long)
	
	Private _CustEventTypeID As System.Nullable(Of Integer)
	
	Private _CustEventRegDate As System.Nullable(Of Date)
	
	Private _CustEventDate As System.Nullable(Of Date)
	
	Private _CustEventComment As String
	
	Private _CustFrameID As System.Nullable(Of Integer)
	
	Private _CframeManager As String
	
	Private _CReporterUserName As String
	
	Private _UserID As System.Nullable(Of Integer)
	
	Private _MSum As System.Nullable(Of Decimal)
	
	Private _PCustEventID As System.Nullable(Of Integer)
	
	Private _CustEventResult As System.Nullable(Of Integer)
	
	Private _CustRelateID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustEventIDChanging(value As Long)
    End Sub
    Partial Private Sub OnCustEventIDChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnCustEventTypeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustEventTypeIDChanged()
    End Sub
    Partial Private Sub OnCustEventRegDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCustEventRegDateChanged()
    End Sub
    Partial Private Sub OnCustEventDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCustEventDateChanged()
    End Sub
    Partial Private Sub OnCustEventCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCustEventCommentChanged()
    End Sub
    Partial Private Sub OnCustFrameIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustFrameIDChanged()
    End Sub
    Partial Private Sub OnCframeManagerChanging(value As String)
    End Sub
    Partial Private Sub OnCframeManagerChanged()
    End Sub
    Partial Private Sub OnCReporterUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnCReporterUserNameChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnMSumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMSumChanged()
    End Sub
    Partial Private Sub OnPCustEventIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPCustEventIDChanged()
    End Sub
    Partial Private Sub OnCustEventResultChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustEventResultChanged()
    End Sub
    Partial Private Sub OnCustRelateIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustRelateIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CustEventID() As Long
		Get
			Return Me._CustEventID
		End Get
		Set
			If ((Me._CustEventID = value)  _
						= false) Then
				Me.OnCustEventIDChanging(value)
				Me.SendPropertyChanging
				Me._CustEventID = value
				Me.SendPropertyChanged("CustEventID")
				Me.OnCustEventIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="BigInt")>  _
	Public Property CustomerID() As System.Nullable(Of Long)
		Get
			Return Me._CustomerID
		End Get
		Set
			If (Me._CustomerID.Equals(value) = false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventTypeID", DbType:="Int")>  _
	Public Property CustEventTypeID() As System.Nullable(Of Integer)
		Get
			Return Me._CustEventTypeID
		End Get
		Set
			If (Me._CustEventTypeID.Equals(value) = false) Then
				Me.OnCustEventTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._CustEventTypeID = value
				Me.SendPropertyChanged("CustEventTypeID")
				Me.OnCustEventTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventRegDate", DbType:="DateTime")>  _
	Public Property CustEventRegDate() As System.Nullable(Of Date)
		Get
			Return Me._CustEventRegDate
		End Get
		Set
			If (Me._CustEventRegDate.Equals(value) = false) Then
				Me.OnCustEventRegDateChanging(value)
				Me.SendPropertyChanging
				Me._CustEventRegDate = value
				Me.SendPropertyChanged("CustEventRegDate")
				Me.OnCustEventRegDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventDate", DbType:="DateTime")>  _
	Public Property CustEventDate() As System.Nullable(Of Date)
		Get
			Return Me._CustEventDate
		End Get
		Set
			If (Me._CustEventDate.Equals(value) = false) Then
				Me.OnCustEventDateChanging(value)
				Me.SendPropertyChanging
				Me._CustEventDate = value
				Me.SendPropertyChanged("CustEventDate")
				Me.OnCustEventDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventComment", DbType:="NVarChar(MAX)")>  _
	Public Property CustEventComment() As String
		Get
			Return Me._CustEventComment
		End Get
		Set
			If (String.Equals(Me._CustEventComment, value) = false) Then
				Me.OnCustEventCommentChanging(value)
				Me.SendPropertyChanging
				Me._CustEventComment = value
				Me.SendPropertyChanged("CustEventComment")
				Me.OnCustEventCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustFrameID", DbType:="Int")>  _
	Public Property CustFrameID() As System.Nullable(Of Integer)
		Get
			Return Me._CustFrameID
		End Get
		Set
			If (Me._CustFrameID.Equals(value) = false) Then
				Me.OnCustFrameIDChanging(value)
				Me.SendPropertyChanging
				Me._CustFrameID = value
				Me.SendPropertyChanged("CustFrameID")
				Me.OnCustFrameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CframeManager", DbType:="NVarChar(50)")>  _
	Public Property CframeManager() As String
		Get
			Return Me._CframeManager
		End Get
		Set
			If (String.Equals(Me._CframeManager, value) = false) Then
				Me.OnCframeManagerChanging(value)
				Me.SendPropertyChanging
				Me._CframeManager = value
				Me.SendPropertyChanged("CframeManager")
				Me.OnCframeManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CReporterUserName", DbType:="NVarChar(50)")>  _
	Public Property CReporterUserName() As String
		Get
			Return Me._CReporterUserName
		End Get
		Set
			If (String.Equals(Me._CReporterUserName, value) = false) Then
				Me.OnCReporterUserNameChanging(value)
				Me.SendPropertyChanging
				Me._CReporterUserName = value
				Me.SendPropertyChanged("CReporterUserName")
				Me.OnCReporterUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int")>  _
	Public Property UserID() As System.Nullable(Of Integer)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSum", DbType:="Money")>  _
	Public Property MSum() As System.Nullable(Of Decimal)
		Get
			Return Me._MSum
		End Get
		Set
			If (Me._MSum.Equals(value) = false) Then
				Me.OnMSumChanging(value)
				Me.SendPropertyChanging
				Me._MSum = value
				Me.SendPropertyChanged("MSum")
				Me.OnMSumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCustEventID", DbType:="Int")>  _
	Public Property PCustEventID() As System.Nullable(Of Integer)
		Get
			Return Me._PCustEventID
		End Get
		Set
			If (Me._PCustEventID.Equals(value) = false) Then
				Me.OnPCustEventIDChanging(value)
				Me.SendPropertyChanging
				Me._PCustEventID = value
				Me.SendPropertyChanged("PCustEventID")
				Me.OnPCustEventIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEventResult", DbType:="Int")>  _
	Public Property CustEventResult() As System.Nullable(Of Integer)
		Get
			Return Me._CustEventResult
		End Get
		Set
			If (Me._CustEventResult.Equals(value) = false) Then
				Me.OnCustEventResultChanging(value)
				Me.SendPropertyChanging
				Me._CustEventResult = value
				Me.SendPropertyChanged("CustEventResult")
				Me.OnCustEventResultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustRelateID", DbType:="Int")>  _
	Public Property CustRelateID() As System.Nullable(Of Integer)
		Get
			Return Me._CustRelateID
		End Get
		Set
			If (Me._CustRelateID.Equals(value) = false) Then
				Me.OnCustRelateIDChanging(value)
				Me.SendPropertyChanging
				Me._CustRelateID = value
				Me.SendPropertyChanged("CustRelateID")
				Me.OnCustRelateIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p4v_Tarifs")>  _
Partial Public Class p4v_Tarif
	
	Private _ServiceID As System.Nullable(Of Integer)
	
	Private _ServiceName As String
	
	Private _FrameID As Integer
	
	Private _FrameName As String
	
	Private _Pdate As System.Nullable(Of Date)
	
	Private _Tarif As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServiceID", DbType:="Int")>  _
	Public Property ServiceID() As System.Nullable(Of Integer)
		Get
			Return Me._ServiceID
		End Get
		Set
			If (Me._ServiceID.Equals(value) = false) Then
				Me._ServiceID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServiceName", DbType:="NVarChar(50)")>  _
	Public Property ServiceName() As String
		Get
			Return Me._ServiceName
		End Get
		Set
			If (String.Equals(Me._ServiceName, value) = false) Then
				Me._ServiceName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameID", DbType:="Int NOT NULL")>  _
	Public Property FrameID() As Integer
		Get
			Return Me._FrameID
		End Get
		Set
			If ((Me._FrameID = value)  _
						= false) Then
				Me._FrameID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameName", DbType:="NVarChar(50)")>  _
	Public Property FrameName() As String
		Get
			Return Me._FrameName
		End Get
		Set
			If (String.Equals(Me._FrameName, value) = false) Then
				Me._FrameName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pdate", DbType:="DateTime")>  _
	Public Property Pdate() As System.Nullable(Of Date)
		Get
			Return Me._Pdate
		End Get
		Set
			If (Me._Pdate.Equals(value) = false) Then
				Me._Pdate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tarif", DbType:="Float")>  _
	Public Property Tarif() As System.Nullable(Of Double)
		Get
			Return Me._Tarif
		End Get
		Set
			If (Me._Tarif.Equals(value) = false) Then
				Me._Tarif = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p5t_FormResults")>  _
Partial Public Class p5t_FormResult
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RowID As Integer
	
	Private _FormID As System.Nullable(Of Integer)
	
	Private _grp As String
	
	Private _sumg As System.Nullable(Of Integer)
	
	Private _stan As System.Nullable(Of Integer)
	
	Private _perc As System.Nullable(Of Double)
	
	Private _gid As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRowIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRowIDChanged()
    End Sub
    Partial Private Sub OnFormIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFormIDChanged()
    End Sub
    Partial Private Sub OngrpChanging(value As String)
    End Sub
    Partial Private Sub OngrpChanged()
    End Sub
    Partial Private Sub OnsumgChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsumgChanged()
    End Sub
    Partial Private Sub OnstanChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstanChanged()
    End Sub
    Partial Private Sub OnpercChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnpercChanged()
    End Sub
    Partial Private Sub OngidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RowID() As Integer
		Get
			Return Me._RowID
		End Get
		Set
			If ((Me._RowID = value)  _
						= false) Then
				Me.OnRowIDChanging(value)
				Me.SendPropertyChanging
				Me._RowID = value
				Me.SendPropertyChanged("RowID")
				Me.OnRowIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", DbType:="Int")>  _
	Public Property FormID() As System.Nullable(Of Integer)
		Get
			Return Me._FormID
		End Get
		Set
			If (Me._FormID.Equals(value) = false) Then
				Me.OnFormIDChanging(value)
				Me.SendPropertyChanging
				Me._FormID = value
				Me.SendPropertyChanged("FormID")
				Me.OnFormIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grp", DbType:="VarChar(50)")>  _
	Public Property grp() As String
		Get
			Return Me._grp
		End Get
		Set
			If (String.Equals(Me._grp, value) = false) Then
				Me.OngrpChanging(value)
				Me.SendPropertyChanging
				Me._grp = value
				Me.SendPropertyChanged("grp")
				Me.OngrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumg", DbType:="Int")>  _
	Public Property sumg() As System.Nullable(Of Integer)
		Get
			Return Me._sumg
		End Get
		Set
			If (Me._sumg.Equals(value) = false) Then
				Me.OnsumgChanging(value)
				Me.SendPropertyChanging
				Me._sumg = value
				Me.SendPropertyChanged("sumg")
				Me.OnsumgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stan", DbType:="Int")>  _
	Public Property stan() As System.Nullable(Of Integer)
		Get
			Return Me._stan
		End Get
		Set
			If (Me._stan.Equals(value) = false) Then
				Me.OnstanChanging(value)
				Me.SendPropertyChanging
				Me._stan = value
				Me.SendPropertyChanged("stan")
				Me.OnstanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_perc", DbType:="Float")>  _
	Public Property perc() As System.Nullable(Of Double)
		Get
			Return Me._perc
		End Get
		Set
			If (Me._perc.Equals(value) = false) Then
				Me.OnpercChanging(value)
				Me.SendPropertyChanging
				Me._perc = value
				Me.SendPropertyChanged("perc")
				Me.OnpercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gid", DbType:="Int")>  _
	Public Property gid() As System.Nullable(Of Integer)
		Get
			Return Me._gid
		End Get
		Set
			If (Me._gid.Equals(value) = false) Then
				Me.OngidChanging(value)
				Me.SendPropertyChanging
				Me._gid = value
				Me.SendPropertyChanged("gid")
				Me.OngidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p6t_ActStatus")>  _
Partial Public Class p6t_ActStatus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ActStatID As Integer
	
	Private _EmpID As System.Nullable(Of Long)
	
	Private _ActID As System.Nullable(Of Integer)
	
	Private _p6t_Emp As EntityRef(Of p6t_Emp)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnActStatIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnActStatIDChanged()
    End Sub
    Partial Private Sub OnEmpIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnEmpIDChanged()
    End Sub
    Partial Private Sub OnActIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnActIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._p6t_Emp = CType(Nothing, EntityRef(Of p6t_Emp))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActStatID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ActStatID() As Integer
		Get
			Return Me._ActStatID
		End Get
		Set
			If ((Me._ActStatID = value)  _
						= false) Then
				Me.OnActStatIDChanging(value)
				Me.SendPropertyChanging
				Me._ActStatID = value
				Me.SendPropertyChanged("ActStatID")
				Me.OnActStatIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="BigInt")>  _
	Public Property EmpID() As System.Nullable(Of Long)
		Get
			Return Me._EmpID
		End Get
		Set
			If (Me._EmpID.Equals(value) = false) Then
				If Me._p6t_Emp.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnEmpIDChanging(value)
				Me.SendPropertyChanging
				Me._EmpID = value
				Me.SendPropertyChanged("EmpID")
				Me.OnEmpIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActID", DbType:="Int")>  _
	Public Property ActID() As System.Nullable(Of Integer)
		Get
			Return Me._ActID
		End Get
		Set
			If (Me._ActID.Equals(value) = false) Then
				Me.OnActIDChanging(value)
				Me.SendPropertyChanging
				Me._ActID = value
				Me.SendPropertyChanged("ActID")
				Me.OnActIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p6t_Emp_p6t_ActStatus", Storage:="_p6t_Emp", ThisKey:="EmpID", OtherKey:="EmpID", IsForeignKey:=true)>  _
	Public Property p6t_Emp() As p6t_Emp
		Get
			Return Me._p6t_Emp.Entity
		End Get
		Set
			Dim previousValue As p6t_Emp = Me._p6t_Emp.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p6t_Emp.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p6t_Emp.Entity = Nothing
					previousValue.p6t_ActStatus.Remove(Me)
				End If
				Me._p6t_Emp.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.p6t_ActStatus.Add(Me)
					Me._EmpID = value.EmpID
				Else
					Me._EmpID = CType(Nothing, Nullable(Of Long))
				End If
				Me.SendPropertyChanged("p6t_Emp")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p6t_jobs")>  _
Partial Public Class p6t_job
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JobID As Integer
	
	Private _JobName As String
	
	Private _p6t_Emps As EntitySet(Of p6t_Emp)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJobIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnJobIDChanged()
    End Sub
    Partial Private Sub OnJobNameChanging(value As String)
    End Sub
    Partial Private Sub OnJobNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._p6t_Emps = New EntitySet(Of p6t_Emp)(AddressOf Me.attach_p6t_Emps, AddressOf Me.detach_p6t_Emps)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property JobID() As Integer
		Get
			Return Me._JobID
		End Get
		Set
			If ((Me._JobID = value)  _
						= false) Then
				Me.OnJobIDChanging(value)
				Me.SendPropertyChanging
				Me._JobID = value
				Me.SendPropertyChanged("JobID")
				Me.OnJobIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobName", DbType:="VarChar(50)")>  _
	Public Property JobName() As String
		Get
			Return Me._JobName
		End Get
		Set
			If (String.Equals(Me._JobName, value) = false) Then
				Me.OnJobNameChanging(value)
				Me.SendPropertyChanging
				Me._JobName = value
				Me.SendPropertyChanged("JobName")
				Me.OnJobNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p6t_job_p6t_Emp", Storage:="_p6t_Emps", ThisKey:="JobID", OtherKey:="JobID")>  _
	Public Property p6t_Emps() As EntitySet(Of p6t_Emp)
		Get
			Return Me._p6t_Emps
		End Get
		Set
			Me._p6t_Emps.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_p6t_Emps(ByVal entity As p6t_Emp)
		Me.SendPropertyChanging
		entity.p6t_job = Me
	End Sub
	
	Private Sub detach_p6t_Emps(ByVal entity As p6t_Emp)
		Me.SendPropertyChanging
		entity.p6t_job = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FrameList")>  _
Partial Public Class FrameList
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FrameID As Integer
	
	Private _FrameName As String
	
	Private _FrameManager As String
	
	Private _ServiceID As System.Nullable(Of Integer)
	
	Private _Email As String
	
	Private _PaymentType As System.Nullable(Of Integer)
	
	Private _SuppTarget As System.Nullable(Of Double)
	
	Private _VisibleforSUSER As System.Nullable(Of Integer)
	
	Private _NFrameID As System.Nullable(Of Integer)
	
	Private _LakutID As System.Nullable(Of Integer)
	
	Private _ServiceTypeID As System.Nullable(Of Integer)
	
	Private _YearType As System.Nullable(Of Char)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFrameIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFrameIDChanged()
    End Sub
    Partial Private Sub OnFrameNameChanging(value As String)
    End Sub
    Partial Private Sub OnFrameNameChanged()
    End Sub
    Partial Private Sub OnFrameManagerChanging(value As String)
    End Sub
    Partial Private Sub OnFrameManagerChanged()
    End Sub
    Partial Private Sub OnServiceIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnServiceIDChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnPaymentTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPaymentTypeChanged()
    End Sub
    Partial Private Sub OnSuppTargetChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuppTargetChanged()
    End Sub
    Partial Private Sub OnVisibleforSUSERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVisibleforSUSERChanged()
    End Sub
    Partial Private Sub OnNFrameIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNFrameIDChanged()
    End Sub
    Partial Private Sub OnLakutIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLakutIDChanged()
    End Sub
    Partial Private Sub OnServiceTypeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnServiceTypeIDChanged()
    End Sub
    Partial Private Sub OnYearTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnYearTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FrameID() As Integer
		Get
			Return Me._FrameID
		End Get
		Set
			If ((Me._FrameID = value)  _
						= false) Then
				Me.OnFrameIDChanging(value)
				Me.SendPropertyChanging
				Me._FrameID = value
				Me.SendPropertyChanged("FrameID")
				Me.OnFrameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameName", DbType:="NVarChar(50)")>  _
	Public Property FrameName() As String
		Get
			Return Me._FrameName
		End Get
		Set
			If (String.Equals(Me._FrameName, value) = false) Then
				Me.OnFrameNameChanging(value)
				Me.SendPropertyChanging
				Me._FrameName = value
				Me.SendPropertyChanged("FrameName")
				Me.OnFrameNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameManager", DbType:="NVarChar(50)")>  _
	Public Property FrameManager() As String
		Get
			Return Me._FrameManager
		End Get
		Set
			If (String.Equals(Me._FrameManager, value) = false) Then
				Me.OnFrameManagerChanging(value)
				Me.SendPropertyChanging
				Me._FrameManager = value
				Me.SendPropertyChanged("FrameManager")
				Me.OnFrameManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServiceID", DbType:="Int")>  _
	Public Property ServiceID() As System.Nullable(Of Integer)
		Get
			Return Me._ServiceID
		End Get
		Set
			If (Me._ServiceID.Equals(value) = false) Then
				Me.OnServiceIDChanging(value)
				Me.SendPropertyChanging
				Me._ServiceID = value
				Me.SendPropertyChanged("ServiceID")
				Me.OnServiceIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(50)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentType", DbType:="Int")>  _
	Public Property PaymentType() As System.Nullable(Of Integer)
		Get
			Return Me._PaymentType
		End Get
		Set
			If (Me._PaymentType.Equals(value) = false) Then
				Me.OnPaymentTypeChanging(value)
				Me.SendPropertyChanging
				Me._PaymentType = value
				Me.SendPropertyChanged("PaymentType")
				Me.OnPaymentTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SuppTarget", DbType:="Float")>  _
	Public Property SuppTarget() As System.Nullable(Of Double)
		Get
			Return Me._SuppTarget
		End Get
		Set
			If (Me._SuppTarget.Equals(value) = false) Then
				Me.OnSuppTargetChanging(value)
				Me.SendPropertyChanging
				Me._SuppTarget = value
				Me.SendPropertyChanged("SuppTarget")
				Me.OnSuppTargetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisibleforSUSER", DbType:="Int")>  _
	Public Property VisibleforSUSER() As System.Nullable(Of Integer)
		Get
			Return Me._VisibleforSUSER
		End Get
		Set
			If (Me._VisibleforSUSER.Equals(value) = false) Then
				Me.OnVisibleforSUSERChanging(value)
				Me.SendPropertyChanging
				Me._VisibleforSUSER = value
				Me.SendPropertyChanged("VisibleforSUSER")
				Me.OnVisibleforSUSERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NFrameID", DbType:="Int")>  _
	Public Property NFrameID() As System.Nullable(Of Integer)
		Get
			Return Me._NFrameID
		End Get
		Set
			If (Me._NFrameID.Equals(value) = false) Then
				Me.OnNFrameIDChanging(value)
				Me.SendPropertyChanging
				Me._NFrameID = value
				Me.SendPropertyChanged("NFrameID")
				Me.OnNFrameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LakutID", DbType:="Int")>  _
	Public Property LakutID() As System.Nullable(Of Integer)
		Get
			Return Me._LakutID
		End Get
		Set
			If (Me._LakutID.Equals(value) = false) Then
				Me.OnLakutIDChanging(value)
				Me.SendPropertyChanging
				Me._LakutID = value
				Me.SendPropertyChanged("LakutID")
				Me.OnLakutIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServiceTypeID", DbType:="Int")>  _
	Public Property ServiceTypeID() As System.Nullable(Of Integer)
		Get
			Return Me._ServiceTypeID
		End Get
		Set
			If (Me._ServiceTypeID.Equals(value) = false) Then
				Me.OnServiceTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._ServiceTypeID = value
				Me.SendPropertyChanged("ServiceTypeID")
				Me.OnServiceTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YearType", DbType:="Char(1)")>  _
	Public Property YearType() As System.Nullable(Of Char)
		Get
			Return Me._YearType
		End Get
		Set
			If (Me._YearType.Equals(value) = false) Then
				Me.OnYearTypeChanging(value)
				Me.SendPropertyChanging
				Me._YearType = value
				Me.SendPropertyChanged("YearType")
				Me.OnYearTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p6t_Emps")>  _
Partial Public Class p6t_Emp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EmpID As Long
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _JobID As System.Nullable(Of Integer)
	
	Private _FirstDate As System.Nullable(Of Date)
	
	Private _LastDate As System.Nullable(Of Date)
	
	Private _FrameID As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _p6t_ActStatus As EntitySet(Of p6t_ActStatus)
	
	Private _p6t_job As EntityRef(Of p6t_job)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEmpIDChanging(value As Long)
    End Sub
    Partial Private Sub OnEmpIDChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnJobIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnJobIDChanged()
    End Sub
    Partial Private Sub OnFirstDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFirstDateChanged()
    End Sub
    Partial Private Sub OnLastDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastDateChanged()
    End Sub
    Partial Private Sub OnFrameIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFrameIDChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._p6t_ActStatus = New EntitySet(Of p6t_ActStatus)(AddressOf Me.attach_p6t_ActStatus, AddressOf Me.detach_p6t_ActStatus)
		Me._p6t_job = CType(Nothing, EntityRef(Of p6t_job))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EmpID() As Long
		Get
			Return Me._EmpID
		End Get
		Set
			If ((Me._EmpID = value)  _
						= false) Then
				Me.OnEmpIDChanging(value)
				Me.SendPropertyChanging
				Me._EmpID = value
				Me.SendPropertyChanged("EmpID")
				Me.OnEmpIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(50)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="VarChar(50)")>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobID", DbType:="Int")>  _
	Public Property JobID() As System.Nullable(Of Integer)
		Get
			Return Me._JobID
		End Get
		Set
			If (Me._JobID.Equals(value) = false) Then
				If Me._p6t_job.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnJobIDChanging(value)
				Me.SendPropertyChanging
				Me._JobID = value
				Me.SendPropertyChanged("JobID")
				Me.OnJobIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstDate", DbType:="DateTime")>  _
	Public Property FirstDate() As System.Nullable(Of Date)
		Get
			Return Me._FirstDate
		End Get
		Set
			If (Me._FirstDate.Equals(value) = false) Then
				Me.OnFirstDateChanging(value)
				Me.SendPropertyChanging
				Me._FirstDate = value
				Me.SendPropertyChanged("FirstDate")
				Me.OnFirstDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastDate", DbType:="DateTime")>  _
	Public Property LastDate() As System.Nullable(Of Date)
		Get
			Return Me._LastDate
		End Get
		Set
			If (Me._LastDate.Equals(value) = false) Then
				Me.OnLastDateChanging(value)
				Me.SendPropertyChanging
				Me._LastDate = value
				Me.SendPropertyChanged("LastDate")
				Me.OnLastDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameID", DbType:="Int")>  _
	Public Property FrameID() As System.Nullable(Of Integer)
		Get
			Return Me._FrameID
		End Get
		Set
			If (Me._FrameID.Equals(value) = false) Then
				Me.OnFrameIDChanging(value)
				Me.SendPropertyChanging
				Me._FrameID = value
				Me.SendPropertyChanged("FrameID")
				Me.OnFrameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p6t_Emp_p6t_ActStatus", Storage:="_p6t_ActStatus", ThisKey:="EmpID", OtherKey:="EmpID")>  _
	Public Property p6t_ActStatus() As EntitySet(Of p6t_ActStatus)
		Get
			Return Me._p6t_ActStatus
		End Get
		Set
			Me._p6t_ActStatus.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p6t_job_p6t_Emp", Storage:="_p6t_job", ThisKey:="JobID", OtherKey:="JobID", IsForeignKey:=true)>  _
	Public Property p6t_job() As p6t_job
		Get
			Return Me._p6t_job.Entity
		End Get
		Set
			Dim previousValue As p6t_job = Me._p6t_job.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p6t_job.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p6t_job.Entity = Nothing
					previousValue.p6t_Emps.Remove(Me)
				End If
				Me._p6t_job.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.p6t_Emps.Add(Me)
					Me._JobID = value.JobID
				Else
					Me._JobID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("p6t_job")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_p6t_ActStatus(ByVal entity As p6t_ActStatus)
		Me.SendPropertyChanging
		entity.p6t_Emp = Me
	End Sub
	
	Private Sub detach_p6t_ActStatus(ByVal entity As p6t_ActStatus)
		Me.SendPropertyChanging
		entity.p6t_Emp = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p1t_Categories")>  _
Partial Public Class p1t_Category
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CompanyYear As System.Nullable(Of Integer)
	
	Private _CategoryID As Integer
	
	Private _Category As String
	
	Private _CatAttributes As String
	
	Private _ItemOrder As System.Nullable(Of Integer)
	
	Private _CategoryType As System.Nullable(Of Short)
	
	Private _SQLWhere As String
	
	Private _Name As String
	
	Private _Root As System.Nullable(Of Integer)
	
	Private _Parent As System.Nullable(Of Integer)
	
	Private _NameType As System.Nullable(Of Integer)
	
	Private _MissingAssignment As System.Nullable(Of Integer)
	
	Private _DataSources As String
	
	Private _PopType As System.Nullable(Of Integer)
	
	Private _AutoPSRP As System.Nullable(Of Integer)
	
	Private _SourceTable As String
	
	Private _UPD As System.Nullable(Of Short)
	
	Private _PeriodType As System.Nullable(Of Integer)
	
	Private _SubjectID As System.Nullable(Of Integer)
	
	Private _IsParent As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCompanyYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompanyYearChanged()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnCatAttributesChanging(value As String)
    End Sub
    Partial Private Sub OnCatAttributesChanged()
    End Sub
    Partial Private Sub OnItemOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnItemOrderChanged()
    End Sub
    Partial Private Sub OnCategoryTypeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCategoryTypeChanged()
    End Sub
    Partial Private Sub OnSQLWhereChanging(value As String)
    End Sub
    Partial Private Sub OnSQLWhereChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnRootChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRootChanged()
    End Sub
    Partial Private Sub OnParentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentChanged()
    End Sub
    Partial Private Sub OnNameTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNameTypeChanged()
    End Sub
    Partial Private Sub OnMissingAssignmentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMissingAssignmentChanged()
    End Sub
    Partial Private Sub OnDataSourcesChanging(value As String)
    End Sub
    Partial Private Sub OnDataSourcesChanged()
    End Sub
    Partial Private Sub OnPopTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPopTypeChanged()
    End Sub
    Partial Private Sub OnAutoPSRPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAutoPSRPChanged()
    End Sub
    Partial Private Sub OnSourceTableChanging(value As String)
    End Sub
    Partial Private Sub OnSourceTableChanged()
    End Sub
    Partial Private Sub OnUPDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDChanged()
    End Sub
    Partial Private Sub OnPeriodTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPeriodTypeChanged()
    End Sub
    Partial Private Sub OnSubjectIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSubjectIDChanged()
    End Sub
    Partial Private Sub OnIsParentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsParentChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyYear", DbType:="Int")>  _
	Public Property CompanyYear() As System.Nullable(Of Integer)
		Get
			Return Me._CompanyYear
		End Get
		Set
			If (Me._CompanyYear.Equals(value) = false) Then
				Me.OnCompanyYearChanging(value)
				Me.SendPropertyChanging
				Me._CompanyYear = value
				Me.SendPropertyChanged("CompanyYear")
				Me.OnCompanyYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me.OnCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._CategoryID = value
				Me.SendPropertyChanged("CategoryID")
				Me.OnCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(255)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatAttributes", DbType:="VarChar(255)")>  _
	Public Property CatAttributes() As String
		Get
			Return Me._CatAttributes
		End Get
		Set
			If (String.Equals(Me._CatAttributes, value) = false) Then
				Me.OnCatAttributesChanging(value)
				Me.SendPropertyChanging
				Me._CatAttributes = value
				Me.SendPropertyChanged("CatAttributes")
				Me.OnCatAttributesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemOrder", DbType:="Int")>  _
	Public Property ItemOrder() As System.Nullable(Of Integer)
		Get
			Return Me._ItemOrder
		End Get
		Set
			If (Me._ItemOrder.Equals(value) = false) Then
				Me.OnItemOrderChanging(value)
				Me.SendPropertyChanging
				Me._ItemOrder = value
				Me.SendPropertyChanged("ItemOrder")
				Me.OnItemOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryType", DbType:="SmallInt")>  _
	Public Property CategoryType() As System.Nullable(Of Short)
		Get
			Return Me._CategoryType
		End Get
		Set
			If (Me._CategoryType.Equals(value) = false) Then
				Me.OnCategoryTypeChanging(value)
				Me.SendPropertyChanging
				Me._CategoryType = value
				Me.SendPropertyChanged("CategoryType")
				Me.OnCategoryTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SQLWhere", DbType:="VarChar(255)")>  _
	Public Property SQLWhere() As String
		Get
			Return Me._SQLWhere
		End Get
		Set
			If (String.Equals(Me._SQLWhere, value) = false) Then
				Me.OnSQLWhereChanging(value)
				Me.SendPropertyChanging
				Me._SQLWhere = value
				Me.SendPropertyChanged("SQLWhere")
				Me.OnSQLWhereChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Root", DbType:="Int")>  _
	Public Property Root() As System.Nullable(Of Integer)
		Get
			Return Me._Root
		End Get
		Set
			If (Me._Root.Equals(value) = false) Then
				Me.OnRootChanging(value)
				Me.SendPropertyChanging
				Me._Root = value
				Me.SendPropertyChanged("Root")
				Me.OnRootChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Parent", DbType:="Int")>  _
	Public Property Parent() As System.Nullable(Of Integer)
		Get
			Return Me._Parent
		End Get
		Set
			If (Me._Parent.Equals(value) = false) Then
				Me.OnParentChanging(value)
				Me.SendPropertyChanging
				Me._Parent = value
				Me.SendPropertyChanged("Parent")
				Me.OnParentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameType", DbType:="Int")>  _
	Public Property NameType() As System.Nullable(Of Integer)
		Get
			Return Me._NameType
		End Get
		Set
			If (Me._NameType.Equals(value) = false) Then
				Me.OnNameTypeChanging(value)
				Me.SendPropertyChanging
				Me._NameType = value
				Me.SendPropertyChanged("NameType")
				Me.OnNameTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MissingAssignment", DbType:="Int")>  _
	Public Property MissingAssignment() As System.Nullable(Of Integer)
		Get
			Return Me._MissingAssignment
		End Get
		Set
			If (Me._MissingAssignment.Equals(value) = false) Then
				Me.OnMissingAssignmentChanging(value)
				Me.SendPropertyChanging
				Me._MissingAssignment = value
				Me.SendPropertyChanged("MissingAssignment")
				Me.OnMissingAssignmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSources", DbType:="VarChar(255)")>  _
	Public Property DataSources() As String
		Get
			Return Me._DataSources
		End Get
		Set
			If (String.Equals(Me._DataSources, value) = false) Then
				Me.OnDataSourcesChanging(value)
				Me.SendPropertyChanging
				Me._DataSources = value
				Me.SendPropertyChanged("DataSources")
				Me.OnDataSourcesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PopType", DbType:="Int")>  _
	Public Property PopType() As System.Nullable(Of Integer)
		Get
			Return Me._PopType
		End Get
		Set
			If (Me._PopType.Equals(value) = false) Then
				Me.OnPopTypeChanging(value)
				Me.SendPropertyChanging
				Me._PopType = value
				Me.SendPropertyChanged("PopType")
				Me.OnPopTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoPSRP", DbType:="Int")>  _
	Public Property AutoPSRP() As System.Nullable(Of Integer)
		Get
			Return Me._AutoPSRP
		End Get
		Set
			If (Me._AutoPSRP.Equals(value) = false) Then
				Me.OnAutoPSRPChanging(value)
				Me.SendPropertyChanging
				Me._AutoPSRP = value
				Me.SendPropertyChanged("AutoPSRP")
				Me.OnAutoPSRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceTable", DbType:="VarChar(255)")>  _
	Public Property SourceTable() As String
		Get
			Return Me._SourceTable
		End Get
		Set
			If (String.Equals(Me._SourceTable, value) = false) Then
				Me.OnSourceTableChanging(value)
				Me.SendPropertyChanging
				Me._SourceTable = value
				Me.SendPropertyChanged("SourceTable")
				Me.OnSourceTableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPD", DbType:="SmallInt")>  _
	Public Property UPD() As System.Nullable(Of Short)
		Get
			Return Me._UPD
		End Get
		Set
			If (Me._UPD.Equals(value) = false) Then
				Me.OnUPDChanging(value)
				Me.SendPropertyChanging
				Me._UPD = value
				Me.SendPropertyChanged("UPD")
				Me.OnUPDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodType", DbType:="Int")>  _
	Public Property PeriodType() As System.Nullable(Of Integer)
		Get
			Return Me._PeriodType
		End Get
		Set
			If (Me._PeriodType.Equals(value) = false) Then
				Me.OnPeriodTypeChanging(value)
				Me.SendPropertyChanging
				Me._PeriodType = value
				Me.SendPropertyChanged("PeriodType")
				Me.OnPeriodTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubjectID", DbType:="Int")>  _
	Public Property SubjectID() As System.Nullable(Of Integer)
		Get
			Return Me._SubjectID
		End Get
		Set
			If (Me._SubjectID.Equals(value) = false) Then
				Me.OnSubjectIDChanging(value)
				Me.SendPropertyChanging
				Me._SubjectID = value
				Me.SendPropertyChanged("SubjectID")
				Me.OnSubjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsParent", DbType:="Int")>  _
	Public Property IsParent() As System.Nullable(Of Integer)
		Get
			Return Me._IsParent
		End Get
		Set
			If (Me._IsParent.Equals(value) = false) Then
				Me.OnIsParentChanging(value)
				Me.SendPropertyChanging
				Me._IsParent = value
				Me.SendPropertyChanged("IsParent")
				Me.OnIsParentChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vEFrameList")>  _
Partial Public Class vEFrameList
	
	Private _FormID As System.Nullable(Of Integer)
	
	Private _FrameID As System.Nullable(Of Integer)
	
	Private _SurveyID As System.Nullable(Of Integer)
	
	Private _framename As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", DbType:="Int")>  _
	Public Property FormID() As System.Nullable(Of Integer)
		Get
			Return Me._FormID
		End Get
		Set
			If (Me._FormID.Equals(value) = false) Then
				Me._FormID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameID", DbType:="Int")>  _
	Public Property FrameID() As System.Nullable(Of Integer)
		Get
			Return Me._FrameID
		End Get
		Set
			If (Me._FrameID.Equals(value) = false) Then
				Me._FrameID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SurveyID", DbType:="Int")>  _
	Public Property SurveyID() As System.Nullable(Of Integer)
		Get
			Return Me._SurveyID
		End Get
		Set
			If (Me._SurveyID.Equals(value) = false) Then
				Me._SurveyID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_framename", DbType:="NVarChar(50)")>  _
	Public Property framename() As String
		Get
			Return Me._framename
		End Get
		Set
			If (String.Equals(Me._framename, value) = false) Then
				Me._framename = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vSurvey_Answers")>  _
Partial Public Class vSurvey_Answer
	
	Private _AnswerID As Integer
	
	Private _FormID As System.Nullable(Of Integer)
	
	Private _QuestionID As System.Nullable(Of Integer)
	
	Private _Val As System.Nullable(Of Integer)
	
	Private _TextDET As String
	
	Private _FrameName As String
	
	Private _FrameID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnswerID", DbType:="Int NOT NULL")>  _
	Public Property AnswerID() As Integer
		Get
			Return Me._AnswerID
		End Get
		Set
			If ((Me._AnswerID = value)  _
						= false) Then
				Me._AnswerID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormID", DbType:="Int")>  _
	Public Property FormID() As System.Nullable(Of Integer)
		Get
			Return Me._FormID
		End Get
		Set
			If (Me._FormID.Equals(value) = false) Then
				Me._FormID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestionID", DbType:="Int")>  _
	Public Property QuestionID() As System.Nullable(Of Integer)
		Get
			Return Me._QuestionID
		End Get
		Set
			If (Me._QuestionID.Equals(value) = false) Then
				Me._QuestionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Val", DbType:="Int")>  _
	Public Property Val() As System.Nullable(Of Integer)
		Get
			Return Me._Val
		End Get
		Set
			If (Me._Val.Equals(value) = false) Then
				Me._Val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextDET", DbType:="VarChar(MAX)")>  _
	Public Property TextDET() As String
		Get
			Return Me._TextDET
		End Get
		Set
			If (String.Equals(Me._TextDET, value) = false) Then
				Me._TextDET = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameName", DbType:="NVarChar(50)")>  _
	Public Property FrameName() As String
		Get
			Return Me._FrameName
		End Get
		Set
			If (String.Equals(Me._FrameName, value) = false) Then
				Me._FrameName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FrameID", DbType:="Int")>  _
	Public Property FrameID() As System.Nullable(Of Integer)
		Get
			Return Me._FrameID
		End Get
		Set
			If (Me._FrameID.Equals(value) = false) Then
				Me._FrameID = value
			End If
		End Set
	End Property
End Class
